Elm.ContentIndex = Elm.ContentIndex || {};
Elm.ContentIndex.make = function (_elm) {
   "use strict";
   _elm.ContentIndex = _elm.ContentIndex || {};
   if (_elm.ContentIndex.values) return _elm.ContentIndex.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp = Elm.StartApp.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var view = F2(function (address,model) {    return A2($Html.div,_U.list([]),_U.list([$Html.text(model)]));});
   var update = F2(function (action,model) {    return {ctor: "_Tuple2",_0: model,_1: $Effects.none};});
   var None = {ctor: "None"};
   var init = {ctor: "_Tuple2",_0: "Hello from Elm.ContentIndex!",_1: $Effects.none};
   var app = $StartApp.start({init: init,update: update,view: view,inputs: _U.list([])});
   var main = app.html;
   var tasks = Elm.Native.Task.make(_elm).performSignal("tasks",app.tasks);
   return _elm.ContentIndex.values = {_op: _op,init: init,None: None,update: update,view: view,app: app,main: main};
};