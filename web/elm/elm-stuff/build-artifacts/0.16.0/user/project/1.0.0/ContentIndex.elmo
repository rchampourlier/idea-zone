Elm.ContentIndex = Elm.ContentIndex || {};
Elm.ContentIndex.make = function (_elm) {
   "use strict";
   _elm.ContentIndex = _elm.ContentIndex || {};
   if (_elm.ContentIndex.values) return _elm.ContentIndex.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Http = Elm.Http.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp = Elm.StartApp.make(_elm),
   $String = Elm.String.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var decodeVoteResult = A2($Json$Decode.at,_U.list(["status"]),$Json$Decode.string);
   var voteType = F2(function (maybeVote,direction) {
      var _p0 = {ctor: "_Tuple2",_0: maybeVote,_1: direction};
      if (_p0._0.ctor === "Nothing") {
            if (_p0._1.ctor === "Up") {
                  return "for";
               } else {
                  return "against";
               }
         } else {
            var _p1 = {ctor: "_Tuple2",_0: _p0._0._0.voteType,_1: direction};
            _v1_6: do {
               if (_p1._1.ctor === "Up") {
                     switch (_p1._0)
                     {case "for": return "for";
                        case "neutral": return "for";
                        case "against": return "neutral";
                        default: break _v1_6;}
                  } else {
                     switch (_p1._0)
                     {case "for": return "neutral";
                        case "neutral": return "against";
                        case "against": return "against";
                        default: break _v1_6;}
                  }
            } while (false);
            return "neutral";
         }
   });
   var viewContentOfficialAnswer = function (officialAnswer) {
      var _p2 = $String.isEmpty(officialAnswer);
      if (_p2 === true) {
            return A2($Html.em,_U.list([]),_U.list([$Html.text("No official answer yet.")]));
         } else {
            return A2($Html.div,
            _U.list([$Html$Attributes.$class("official-answer")]),
            _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("official-answer__header")]),_U.list([$Html.text("Official answer:")]))
                    ,A2($Html.span,_U.list([]),_U.list([$Html.text(officialAnswer)]))]));
         }
   };
   var viewContentStatus = function (status) {
      var statusText = function () {
         var _p3 = status;
         switch (_p3)
         {case "new": return "new";
            case "in_progress": return "in progress";
            case "solved": return "solved";
            default: return "";}
      }();
      var labelColor = function () {
         var _p4 = status;
         switch (_p4)
         {case "new": return "label-danger";
            case "in_progress": return "label-warning";
            case "solved": return "label-success";
            default: return "label-default";}
      }();
      return A2($Html.span,_U.list([$Html$Attributes.$class(A2($Basics._op["++"],"content__status label ",labelColor))]),_U.list([$Html.text(statusText)]));
   };
   var viewContentType = function (contentType) {
      return A2($Html.span,_U.list([$Html$Attributes.$class("content__type label label-default")]),_U.list([$Html.text(contentType)]));
   };
   var ReceivedVoteResult = function (a) {    return {ctor: "ReceivedVoteResult",_0: a};};
   var sendVote = F2(function (content,voteDirection) {
      var contentId = $Basics.toString(content.id);
      var maybeVote = content.voteForCurrentUser;
      var votePath = function () {
         var _p5 = maybeVote;
         if (_p5.ctor === "Nothing") {
               return A2($Basics._op["++"],"/api/contents/",A2($Basics._op["++"],contentId,"/votes"));
            } else {
               return A2($Basics._op["++"],"/api/contents/",A2($Basics._op["++"],contentId,A2($Basics._op["++"],"/votes/",$Basics.toString(_p5._0.id))));
            }
      }();
      var updateParams = function () {
         var _p6 = maybeVote;
         if (_p6.ctor === "Nothing") {
               return _U.list([]);
            } else {
               return _U.list([{ctor: "_Tuple2",_0: "id",_1: $Basics.toString(_p6._0.id)}]);
            }
      }();
      var params = A2($Basics._op["++"],
      _U.list([{ctor: "_Tuple2",_0: "vote[vote_type]",_1: A2(voteType,maybeVote,voteDirection)},{ctor: "_Tuple2",_0: "content_id",_1: contentId}]),
      updateParams);
      var verb = function () {    var _p7 = maybeVote;if (_p7.ctor === "Nothing") {    return "POST";} else {    return "PUT";}}();
      var request = {verb: verb,headers: _U.list([]),url: A2($Http.url,votePath,params),body: $Http.empty};
      return $Effects.task(A2($Task.map,ReceivedVoteResult,$Task.toMaybe(A2($Http.fromJson,decodeVoteResult,A2($Http.send,$Http.defaultSettings,request)))));
   });
   var RequestVote = F2(function (a,b) {    return {ctor: "RequestVote",_0: a,_1: b};});
   var UpdateFilter = function (a) {    return {ctor: "UpdateFilter",_0: a};};
   var viewSearchForm = F2(function (address,model) {
      return A2($Html.form,
      _U.list([$Html$Attributes.$class("form-inline")]),
      _U.list([A2($Html.div,
              _U.list([$Html$Attributes.$class("form-group")]),
              _U.list([A2($Html.label,_U.list([$Html$Attributes.$for("filterInput")]),_U.list([$Html.text("Search for something")]))
                      ,A2($Html.input,
                      _U.list([A3($Html$Events.on,"input",$Html$Events.targetValue,function (str) {    return A2($Signal.message,address,UpdateFilter(str));})
                              ,$Html$Attributes.type$("text")
                              ,$Html$Attributes.$class("form-control")
                              ,$Html$Attributes.id("filterInput")
                              ,$Html$Attributes.size(50)]),
                      _U.list([]))]))
              ,A2($Html.a,
              _U.list([$Html$Attributes.type$("submit")
                      ,$Html$Attributes.$class("btn btn-default")
                      ,$Html$Attributes.href(A2($Basics._op["++"],"/contents/new?label=",model.filter))]),
              _U.list([$Html.text("Create a new one")]))]));
   });
   var SetContents = function (a) {    return {ctor: "SetContents",_0: a};};
   var Down = {ctor: "Down"};
   var Up = {ctor: "Up"};
   var viewContentVoteComponent = F2(function (address,content) {
      var voteScore = A2($Html.span,_U.list([$Html$Attributes.$class("content__vote__score")]),_U.list([$Html.text($Basics.toString(content.voteScore))]));
      var buttonsDisabled = function () {
         var _p8 = content.voteForCurrentUser;
         if (_p8.ctor === "Nothing") {
               return {up: false,down: false};
            } else {
               var _p9 = _p8._0.voteType;
               switch (_p9)
               {case "for": return {up: true,down: false};
                  case "against": return {up: false,down: true};
                  default: return {up: false,down: false};}
            }
      }();
      var voteUpButton = A2($Html.span,
      _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "disabled",_1: buttonsDisabled.up}
                                                  ,{ctor: "_Tuple2",_0: "btn btn-default content__vote__button",_1: true}]))
              ,A2($Html$Events.onClick,address,A2(RequestVote,content,Up))]),
      _U.list([$Html.text("⬆")]));
      var voteDownButton = A2($Html.span,
      _U.list([$Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "disabled",_1: buttonsDisabled.down}
                                                  ,{ctor: "_Tuple2",_0: "btn btn-default content__vote__button",_1: true}]))
              ,A2($Html$Events.onClick,address,A2(RequestVote,content,Down))
              ,$Html$Attributes.disabled(buttonsDisabled.down)]),
      _U.list([$Html.text("⬇")]));
      return A2($Html.div,_U.list([$Html$Attributes.$class("content__vote")]),_U.list([voteUpButton,voteScore,voteDownButton]));
   });
   var Content = F8(function (a,b,c,d,e,f,g,h) {
      return {id: a,label: b,description: c,officialAnswer: d,status: e,contentType: f,voteScore: g,voteForCurrentUser: h};
   });
   var Vote = F2(function (a,b) {    return {id: a,voteType: b};});
   var decodeVote = A3($Json$Decode.object2,
   F2(function (id,voteType) {    return A2(Vote,id,voteType);}),
   A2($Json$Decode._op[":="],"id",$Json$Decode.$int),
   A2($Json$Decode._op[":="],"voteType",$Json$Decode.string));
   var decodeContents = function () {
      var content = A9($Json$Decode.object8,
      F8(function (id,label,desc,oAnswer,status,cType,voteScore,voted) {    return A8(Content,id,label,desc,oAnswer,status,cType,voteScore,voted);}),
      A2($Json$Decode._op[":="],"id",$Json$Decode.$int),
      A2($Json$Decode._op[":="],"label",$Json$Decode.string),
      A2($Json$Decode._op[":="],"description",$Json$Decode.string),
      A2($Json$Decode._op[":="],"officialAnswer",$Json$Decode.string),
      A2($Json$Decode._op[":="],"status",$Json$Decode.string),
      A2($Json$Decode._op[":="],"type",$Json$Decode.string),
      A2($Json$Decode._op[":="],"voteScore",$Json$Decode.$int),
      $Json$Decode.maybe(A2($Json$Decode._op[":="],"voteForCurrentUser",decodeVote)));
      return A2($Json$Decode.at,_U.list(["data"]),$Json$Decode.list(content));
   }();
   var Model = F2(function (a,b) {    return {contents: a,filter: b};});
   var contentBasePath = Elm.Native.Port.make(_elm).inbound("contentBasePath",
   "String",
   function (v) {
      return typeof v === "string" || typeof v === "object" && v instanceof String ? v : _U.badPort("a string",v);
   });
   var viewContent = F2(function (address,content) {
      var contentPath = A2($Basics._op["++"],contentBasePath,$Basics.toString(content.id));
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("content")]),
      _U.list([A2(viewContentVoteComponent,address,content)
              ,A3($Html.node,
              "area",
              _U.list([$Html$Attributes.$class("panel panel-default"),$Html$Attributes.href(contentPath)]),
              _U.list([A2($Html.div,
                      _U.list([$Html$Attributes.$class("panel-heading")]),
                      _U.list([A2($Html.h3,_U.list([$Html$Attributes.$class("panel-title")]),_U.list([$Html.text(content.label)]))
                              ,viewContentType(content.contentType)
                              ,viewContentStatus(content.status)]))
                      ,A2($Html.div,
                      _U.list([$Html$Attributes.$class("panel-body")]),
                      _U.list([A2($Html.div,_U.list([]),_U.list([$Html.text(content.description)]))]))
                      ,A2($Html.div,_U.list([$Html$Attributes.$class("panel-footer")]),_U.list([viewContentOfficialAnswer(content.officialAnswer)]))]))]));
   });
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.div,_U.list([$Html$Attributes.$class("filter-panel bs-callout")]),_U.list([A2(viewSearchForm,address,model)]))
              ,A2($Html.div,_U.list([]),A2($List.map,viewContent(address),model.contents))]));
   });
   var adminArea = Elm.Native.Port.make(_elm).inbound("adminArea",
   "Bool",
   function (v) {
      return typeof v === "boolean" ? v : _U.badPort("a boolean (true or false)",v);
   });
   var fetchContents = function (filterStr) {
      var includeHidden = function () {    var _p10 = adminArea;if (_p10 === true) {    return "true";} else {    return "false";}}();
      var url = A2($Http.url,"/api/contents",_U.list([{ctor: "_Tuple2",_0: "filter",_1: filterStr},{ctor: "_Tuple2",_0: "include_hidden",_1: includeHidden}]));
      return $Effects.task(A2($Task.map,SetContents,$Task.toMaybe(A2($Http.get,decodeContents,url))));
   };
   var init = {ctor: "_Tuple2",_0: A2(Model,_U.list([]),""),_1: fetchContents("")};
   var update = F2(function (action,model) {
      var _p11 = action;
      switch (_p11.ctor)
      {case "SetContents": var newContents = A2($Maybe.withDefault,model.contents,_p11._0);
           var newModel = _U.update(model,{contents: newContents});
           return {ctor: "_Tuple2",_0: newModel,_1: $Effects.none};
         case "UpdateFilter": var _p12 = _p11._0;
           var newModel = _U.update(model,{filter: _p12});
           return {ctor: "_Tuple2",_0: newModel,_1: fetchContents(_p12)};
         case "RequestVote": return {ctor: "_Tuple2",_0: model,_1: A2(sendVote,_p11._0,_p11._1)};
         default: var _p13 = _p11._0;
           if (_p13.ctor === "Just" && _p13._0 === "ok") {
                 return {ctor: "_Tuple2",_0: model,_1: fetchContents(model.filter)};
              } else {
                 return {ctor: "_Tuple2",_0: model,_1: $Effects.none};
              }}
   });
   var app = $StartApp.start({init: init,update: update,view: view,inputs: _U.list([])});
   var main = app.html;
   var tasks = Elm.Native.Task.make(_elm).performSignal("tasks",app.tasks);
   return _elm.ContentIndex.values = {_op: _op
                                     ,Model: Model
                                     ,Vote: Vote
                                     ,Content: Content
                                     ,init: init
                                     ,Up: Up
                                     ,Down: Down
                                     ,SetContents: SetContents
                                     ,UpdateFilter: UpdateFilter
                                     ,RequestVote: RequestVote
                                     ,ReceivedVoteResult: ReceivedVoteResult
                                     ,update: update
                                     ,view: view
                                     ,viewContent: viewContent
                                     ,viewContentVoteComponent: viewContentVoteComponent
                                     ,viewContentType: viewContentType
                                     ,viewContentStatus: viewContentStatus
                                     ,viewContentOfficialAnswer: viewContentOfficialAnswer
                                     ,viewSearchForm: viewSearchForm
                                     ,fetchContents: fetchContents
                                     ,decodeContents: decodeContents
                                     ,decodeVote: decodeVote
                                     ,sendVote: sendVote
                                     ,voteType: voteType
                                     ,decodeVoteResult: decodeVoteResult
                                     ,app: app
                                     ,main: main};
};